diff --git a/Forum/src/main/java/serverDb/forum/ForumService.java b/Forum/src/main/java/serverDb/forum/ForumService.java
index 3c61710..f1beb1e 100644
--- a/Forum/src/main/java/serverDb/forum/ForumService.java
+++ b/Forum/src/main/java/serverDb/forum/ForumService.java
@@ -159,7 +159,7 @@ public class ForumService {
             args.add(limit.intValue());
         }
 
-        List<Thread> threads = jdbcTemplate.query(sql.toString(), args.toArray(new Object[args.size()]), new ThreadRowMapper());
+        List<Thread> threads = jdbcTemplate.query(sql.toString(), args.toArray(new Object[args.size()]), ThreadRowMapper.INSTANCE);
 
         return new ResponseEntity(threads, HttpStatus.OK);
     }

diff --git a/Forum/src/main/java/serverDb/thread/ThreadRowMapper.java b/Forum/src/main/java/serverDb/thread/ThreadRowMapper.java
index cc63dc1..db1fc51 100644
--- a/Forum/src/main/java/serverDb/thread/ThreadRowMapper.java
+++ b/Forum/src/main/java/serverDb/thread/ThreadRowMapper.java
@@ -6,6 +6,9 @@ import java.sql.ResultSet;
 import java.sql.SQLException;
 
 public class ThreadRowMapper implements RowMapper<Thread> {
+
+    public static final ThreadRowMapper INSTANCE = new ThreadRowMapper();
+
     public Thread mapRow(ResultSet rs, int rowNum) throws SQLException {
         Thread thread = new Thread();
 
diff --git a/Forum/src/main/java/serverDb/thread/ThreadService.java b/Forum/src/main/java/serverDb/thread/ThreadService.java
index 46f5dc7..db30d4c 100644
--- a/Forum/src/main/java/serverDb/thread/ThreadService.java
+++ b/Forum/src/main/java/serverDb/thread/ThreadService.java
@@ -2,7 +2,9 @@ package serverDb.thread;
 
 
 import org.springframework.dao.DataIntegrityViolationException;
+import org.springframework.jdbc.datasource.DataSourceUtils;
 import org.springframework.transaction.annotation.Transactional;
+import org.springframework.transaction.support.TransactionSynchronizationUtils;
 import serverDb.error.Error;
 import serverDb.forum.Forum;
 import serverDb.post.Post;
@@ -24,6 +26,7 @@ import org.springframework.http.ResponseEntity;
 import org.springframework.jdbc.core.BatchPreparedStatementSetter;
 import org.springframework.jdbc.core.JdbcTemplate;
 
+import javax.sql.DataSource;
 import java.sql.*;
 
 import java.time.ZonedDateTime;
@@ -36,6 +39,8 @@ public class ThreadService {
 
     @Autowired
     private JdbcTemplate jdbcTemplate;
+    @Autowired
+    private DataSource ds;
 
     @Transactional
     public ResponseEntity createPosts(String slug, int id, List<Post> posts) {
@@ -96,7 +101,7 @@ public class ThreadService {
         sql = "INSERT INTO Post(author, message, parent, thread, forum, forumId, created, id, path) VALUES(?,?,?,?,?,?,?,?," +
                 " (SELECT path FROM Post WHERE id = ?) || ?)";
 
-        try(Connection connection = jdbcTemplate.getDataSource().getConnection();
+        try(Connection connection = DataSourceUtils.getConnection(ds);
             PreparedStatement ps = connection.prepareStatement(sql, Statement.NO_GENERATED_KEYS)) {
 
             for (int i = 0; i < posts.size(); i++) {
@@ -158,6 +163,7 @@ public class ThreadService {
         sql = "INSERT INTO PostsThread(postId, threadId) VALUES(?,?)";
         try(Connection connection = jdbcTemplate.getDataSource().getConnection();
             PreparedStatement ps = connection.prepareStatement(sql, Statement.NO_GENERATED_KEYS)) {
+//            connection.clear
 
             for (int i = 0; i < parentPostId.size(); i++) {
 


